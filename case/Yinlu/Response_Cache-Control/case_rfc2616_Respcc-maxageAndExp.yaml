# ------------------------------------------------
# Case Name:
#       case_rfc2616_Respcc-maxageAndExp
# Case Description:
#       Cache MUST cache the response if the response header with maxage only 
# Testing Steps: 
#       Step 1: send request with cache-control: max-age and Expired
#       Step 2: check whether the request is cached
#       Step 3: check whether the cached expired
# Author: wb-yinlu@taobao.com
# -----------------------------------------------
#
#step 1: send request with cache-control: max-age
--- {
     Request: {
        method: GET,
        uri: '/Respcc-maxageAndExp',
        protocol: HTTP/1.1,
        Connection: close,
        Host: "macaroon.zymlinux.net",
    },
    ServerCheck: {
        uri: '/Respcc-maxageAndExp',
        protocol: HTTP/1.1,
    },
    Response: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Cache-Control: 'public,max-age=10',
        Expires: now+5,
        Content-Length: 43,
        Connection: close,
        body: The body for request response cache control,
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Content-Length: 43,
        body: The body for request response cache control,
    }
}


--- {
    sleep: 3
}

#step 2: check whether the cache expired
--- {
     Request: {
        method: GET,
        uri: '/Respcc-maxageAndExp',
        protocol: HTTP/1.1,
        Connection: close,
    },
    ServerCheck: {
        uri: exclude,
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Content-Length: 43,
        body: The body for request response cache control,
    }
}

--- {
    sleep: 10
}
#step 3: check whether the cache expired
--- {
     Request: {
        method: GET,
        uri: '/Respcc-maxageAndExp',
        protocol: HTTP/1.1,
        Connection: close,
    },
    ServerCheck: {
        uri: '/Respcc-maxageAndExp',
    },
    Response: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Cache-Control: public,
        Content-Length: 8,
        Connection: close,
        body: The body,
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Content-Length: 8,
        body: The body,
    }
}

