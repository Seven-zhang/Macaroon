# ------------------------------------------------
# Case Name:
#       case_rfc2616_Respcc-Smaxage-Maxage-Exp
# Case Description:
#       Cache MUST cache the response if the Smaxage and Maxage and Expires 
# Testing Steps: 
#       Step 1: send request with cache-control Smaxage and Maxage and Expires   
#       Step 2: check whether the request is cached
#       Step 3: check whether the cached expired
# Author: wb-yinlu@taobao.com
# -----------------------------------------------
#
#step 1: send request with cache-control Smaxage and Maxage and Expires    
--- {
     Request: {
        method: GET,
        uri: '/Respcc-Smaxage-Maxage-Exp',
        Cache-Control: 'public,max-age=10',
        protocol: HTTP/1.1,
        Connection: close,
        Host: "macaroon.zymlinux.net",
    },
    ServerCheck: {
        uri: '/Respcc-Smaxage-Maxage-Exp',
        protocol: HTTP/1.1,
    },
    Response: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Cache-Control: 'public, s-maxage=15,max-age=5',
        Expires: now+10,
        Content-Length: 43,
        Connection: close,
        body: The body for request response cache control,
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Content-Length: 43,
        body: The body for request response cache control,
    }
}


--- {
    sleep: 9
}

#step 2: check whether the cache expired
--- {
     Request: {
        method: GET,
        uri: '/Respcc-Smaxage-Maxage-Exp',
        protocol: HTTP/1.1,
        Connection: close,
    },
    ServerCheck: {
        uri: exclude,
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Content-Length: 43,
        body: The body for request response cache control,
    }
}

--- {
    sleep: 7
}
#step 3: check whether the cache expired
--- {
     Request: {
        method: GET,
        uri: '/Respcc-Smaxage-Maxage-Exp',
        protocol: HTTP/1.1,
        Connection: close,
    },
    ServerCheck: {
        uri: '/Respcc-Smaxage-Maxage-Exp',
    },
    Response: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Cache-Control: public,
        Content-Length: 8,
        Connection: close,
        body: The body,
    },
    ClientCheck: {
        protocol: HTTP/1.1,
        statuscode: 200,
        Content-Length: 8,
        body: The body,
    }
}

